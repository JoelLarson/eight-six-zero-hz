{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nimport { Html5QrcodeScannerStrings } from \"../../strings\";\nimport { BaseUiElementFactory, PublicUiElementIdAndClasses } from \"./base\";\nvar TorchController = function () {\n  function TorchController(torchCapability, buttonController, onTorchActionFailureCallback) {\n    this.isTorchOn = false;\n    this.torchCapability = torchCapability;\n    this.buttonController = buttonController;\n    this.onTorchActionFailureCallback = onTorchActionFailureCallback;\n  }\n  TorchController.prototype.isTorchEnabled = function () {\n    return this.isTorchOn;\n  };\n  TorchController.prototype.flipState = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var isTorchOnExpected, error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.buttonController.disable();\n            isTorchOnExpected = !this.isTorchOn;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4, this.torchCapability.apply(isTorchOnExpected)];\n          case 2:\n            _a.sent();\n            this.updateUiBasedOnLatestSettings(this.torchCapability.value(), isTorchOnExpected);\n            return [3, 4];\n          case 3:\n            error_1 = _a.sent();\n            this.propagateFailure(isTorchOnExpected, error_1);\n            this.buttonController.enable();\n            return [3, 4];\n          case 4:\n            return [2];\n        }\n      });\n    });\n  };\n  TorchController.prototype.updateUiBasedOnLatestSettings = function (isTorchOn, isTorchOnExpected) {\n    if (isTorchOn === isTorchOnExpected) {\n      this.buttonController.setText(isTorchOnExpected ? Html5QrcodeScannerStrings.torchOffButton() : Html5QrcodeScannerStrings.torchOnButton());\n      this.isTorchOn = isTorchOnExpected;\n    } else {\n      this.propagateFailure(isTorchOnExpected);\n    }\n    this.buttonController.enable();\n  };\n  TorchController.prototype.propagateFailure = function (isTorchOnExpected, error) {\n    var errorMessage = isTorchOnExpected ? Html5QrcodeScannerStrings.torchOnFailedMessage() : Html5QrcodeScannerStrings.torchOffFailedMessage();\n    if (error) {\n      errorMessage += \"; Error = \" + error;\n    }\n    this.onTorchActionFailureCallback(errorMessage);\n  };\n  TorchController.prototype.reset = function () {\n    this.isTorchOn = false;\n  };\n  return TorchController;\n}();\nvar TorchButton = function () {\n  function TorchButton(torchCapability, onTorchActionFailureCallback) {\n    this.onTorchActionFailureCallback = onTorchActionFailureCallback;\n    this.torchButton = BaseUiElementFactory.createElement(\"button\", PublicUiElementIdAndClasses.TORCH_BUTTON_ID);\n    this.torchController = new TorchController(torchCapability, this, onTorchActionFailureCallback);\n  }\n  TorchButton.prototype.render = function (parentElement, torchButtonOptions) {\n    var _this = this;\n    this.torchButton.innerText = Html5QrcodeScannerStrings.torchOnButton();\n    this.torchButton.style.display = torchButtonOptions.display;\n    this.torchButton.style.marginLeft = torchButtonOptions.marginLeft;\n    var $this = this;\n    this.torchButton.addEventListener(\"click\", function (_) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4, $this.torchController.flipState()];\n            case 1:\n              _a.sent();\n              if ($this.torchController.isTorchEnabled()) {\n                $this.torchButton.classList.remove(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_OFF);\n                $this.torchButton.classList.add(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_ON);\n              } else {\n                $this.torchButton.classList.remove(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_ON);\n                $this.torchButton.classList.add(PublicUiElementIdAndClasses.TORCH_BUTTON_CLASS_TORCH_OFF);\n              }\n              return [2];\n          }\n        });\n      });\n    });\n    parentElement.appendChild(this.torchButton);\n  };\n  TorchButton.prototype.updateTorchCapability = function (torchCapability) {\n    this.torchController = new TorchController(torchCapability, this, this.onTorchActionFailureCallback);\n  };\n  TorchButton.prototype.getTorchButton = function () {\n    return this.torchButton;\n  };\n  TorchButton.prototype.hide = function () {\n    this.torchButton.style.display = \"none\";\n  };\n  TorchButton.prototype.show = function () {\n    this.torchButton.style.display = \"inline-block\";\n  };\n  TorchButton.prototype.disable = function () {\n    this.torchButton.disabled = true;\n  };\n  TorchButton.prototype.enable = function () {\n    this.torchButton.disabled = false;\n  };\n  TorchButton.prototype.setText = function (text) {\n    this.torchButton.innerText = text;\n  };\n  TorchButton.prototype.reset = function () {\n    this.torchButton.innerText = Html5QrcodeScannerStrings.torchOnButton();\n    this.torchController.reset();\n  };\n  TorchButton.create = function (parentElement, torchCapability, torchButtonOptions, onTorchActionFailureCallback) {\n    var button = new TorchButton(torchCapability, onTorchActionFailureCallback);\n    button.render(parentElement, torchButtonOptions);\n    return button;\n  };\n  return TorchButton;\n}();\nexport { TorchButton };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,SAASA,yBAAyB,QAAQ,eAAe;AACzD,SACIC,oBAAoB,EACpBC,2BAA2B,QACxB,QAAQ;AAef;EAQI,yBACIC,eAAwC,EACxCC,gBAAuC,EACvCC,4BAA0D;IALtD,cAAS,GAAY,KAAK;IAM9B,IAAI,CAACF,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACC,4BAA4B,GAAGA,4BAA4B;EACpE;EAGOC,wCAAc,GAArB;IACI,OAAO,IAAI,CAACC,SAAS;EACzB,CAAC;EAUYD,mCAAS,GAAtB;;;;;;YACI,IAAI,CAACF,gBAAgB,CAACI,OAAO,EAAE;YAC3BC,iBAAiB,GAAG,CAAC,IAAI,CAACF,SAAS;;;;YAEnC,WAAM,IAAI,CAACJ,eAAe,CAACO,KAAK,CAACD,iBAAiB,CAAC;;YAAnDE,SAAmD;YACnD,IAAI,CAACC,6BAA6B,CAC9B,IAAI,CAACT,eAAe,CAACU,KAAK,EAAG,EAAEJ,iBAAiB,CAAC;;;;YAErD,IAAI,CAACK,gBAAgB,CAACL,iBAAiB,EAAEM,OAAK,CAAC;YAC/C,IAAI,CAACX,gBAAgB,CAACY,MAAM,EAAE;;;;;;;GAErC;EAEOV,uDAA6B,GAArC,UACIC,SAAkB,EAClBE,iBAA0B;IAC1B,IAAIF,SAAS,KAAKE,iBAAiB,EAAE;MAEjC,IAAI,CAACL,gBAAgB,CAACa,OAAO,CAACR,iBAAiB,GACrCT,yBAAyB,CAACkB,cAAc,EAAE,GAC1ClB,yBAAyB,CAACmB,aAAa,EAAE,CAAC;MACpD,IAAI,CAACZ,SAAS,GAAGE,iBAAiB;KACrC,MAAM;MAGH,IAAI,CAACK,gBAAgB,CAACL,iBAAiB,CAAC;;IAE5C,IAAI,CAACL,gBAAgB,CAACY,MAAM,EAAE;EAClC,CAAC;EAEOV,0CAAgB,GAAxB,UACIG,iBAA0B,EAAEW,KAAW;IACvC,IAAIC,YAAY,GAAGZ,iBAAiB,GAC9BT,yBAAyB,CAACsB,oBAAoB,EAAE,GAChDtB,yBAAyB,CAACuB,qBAAqB,EAAE;IACvD,IAAIH,KAAK,EAAE;MACPC,YAAY,IAAI,YAAY,GAAGD,KAAK;;IAExC,IAAI,CAACf,4BAA4B,CAACgB,YAAY,CAAC;EACnD,CAAC;EAOMf,+BAAK,GAAZ;IACI,IAAI,CAACC,SAAS,GAAG,KAAK;EAC1B,CAAC;EACL,sBAAC;AAAD,CAAC,EA/ED;AAwFA;EAMI,qBACIJ,eAAwC,EACxCE,4BAA0D;IAC1D,IAAI,CAACA,4BAA4B,GAAGA,4BAA4B;IAChE,IAAI,CAACmB,WAAW,GACVvB,oBAAoB,CAACwB,aAAa,CACpC,QAAQ,EAAEvB,2BAA2B,CAACwB,eAAe,CAAC;IAE1D,IAAI,CAACC,eAAe,GAAG,IAAIrB,eAAe,CACtCH,eAAe,EACS,IAAI,EAC5BE,4BAA4B,CAAC;EACrC;EAEQuB,4BAAM,GAAd,UACIC,aAA0B,EAAEC,kBAAsC;IADtE;IAEI,IAAI,CAACN,WAAW,CAACO,SAAS,GACpB/B,yBAAyB,CAACmB,aAAa,EAAE;IAC/C,IAAI,CAACK,WAAW,CAACQ,KAAK,CAACC,OAAO,GAAGH,kBAAkB,CAACG,OAAO;IAC3D,IAAI,CAACT,WAAW,CAACQ,KAAK,CAACE,UAAU,GAAGJ,kBAAkB,CAACI,UAAU;IAEjE,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAI,CAACX,WAAW,CAACY,gBAAgB,CAAC,OAAO,EAAE,UAAOC,CAAC;MAAA;;;;cAC/C,WAAMF,KAAK,CAACR,eAAe,CAACW,SAAS,EAAE;;cAAvC3B,SAAuC;cACvC,IAAIwB,KAAK,CAACR,eAAe,CAACY,cAAc,EAAE,EAAE;gBACxCJ,KAAK,CAACX,WAAW,CAACgB,SAAS,CAACC,MAAM,CAC9BvC,2BAA2B,CAACwC,4BAA4B,CAAC;gBAC7DP,KAAK,CAACX,WAAW,CAACgB,SAAS,CAACG,GAAG,CAC3BzC,2BAA2B,CAAC0C,2BAA2B,CAAC;eAC/D,MAAM;gBACHT,KAAK,CAACX,WAAW,CAACgB,SAAS,CAACC,MAAM,CAC9BvC,2BAA2B,CAAC0C,2BAA2B,CAAC;gBAC5DT,KAAK,CAACX,WAAW,CAACgB,SAAS,CAACG,GAAG,CAC3BzC,2BAA2B,CAACwC,4BAA4B,CAAC;;;;;;KAEpE,CAAC;IAEFb,aAAa,CAACgB,WAAW,CAAC,IAAI,CAACrB,WAAW,CAAC;EAC/C,CAAC;EAEMI,2CAAqB,GAA5B,UAA6BzB,eAAwC;IACjE,IAAI,CAACwB,eAAe,GAAG,IAAIrB,eAAe,CACtCH,eAAe,EACS,IAAI,EAC5B,IAAI,CAACE,4BAA4B,CAAC;EAC1C,CAAC;EAGMuB,oCAAc,GAArB;IACI,OAAO,IAAI,CAACJ,WAAW;EAC3B,CAAC;EAEMI,0BAAI,GAAX;IACI,IAAI,CAACJ,WAAW,CAACQ,KAAK,CAACC,OAAO,GAAG,MAAM;EAC3C,CAAC;EAEML,0BAAI,GAAX;IACI,IAAI,CAACJ,WAAW,CAACQ,KAAK,CAACC,OAAO,GAAG,cAAc;EACnD,CAAC;EAEDL,6BAAO,GAAP;IACI,IAAI,CAACJ,WAAW,CAACsB,QAAQ,GAAG,IAAI;EACpC,CAAC;EAEDlB,4BAAM,GAAN;IACI,IAAI,CAACJ,WAAW,CAACsB,QAAQ,GAAG,KAAK;EACrC,CAAC;EAEDlB,6BAAO,GAAP,UAAQmB,IAAY;IAChB,IAAI,CAACvB,WAAW,CAACO,SAAS,GAAGgB,IAAI;EACrC,CAAC;EAOMnB,2BAAK,GAAZ;IACI,IAAI,CAACJ,WAAW,CAACO,SAAS,GAAG/B,yBAAyB,CAACmB,aAAa,EAAE;IACtE,IAAI,CAACQ,eAAe,CAACqB,KAAK,EAAE;EAChC,CAAC;EAWcpB,kBAAM,GAApB,UACGC,aAA0B,EAC1B1B,eAAwC,EACxC2B,kBAAsC,EACtCzB,4BAA0D;IAE1D,IAAI4C,MAAM,GAAG,IAAIrB,WAAW,CACxBzB,eAAe,EAAEE,4BAA4B,CAAC;IAClD4C,MAAM,CAACC,MAAM,CAACrB,aAAa,EAAEC,kBAAkB,CAAC;IAChD,OAAOmB,MAAM;EACjB,CAAC;EACL,kBAAC;AAAD,CAAC,EA5GD","names":["Html5QrcodeScannerStrings","BaseUiElementFactory","PublicUiElementIdAndClasses","torchCapability","buttonController","onTorchActionFailureCallback","TorchController","isTorchOn","disable","isTorchOnExpected","apply","_a","updateUiBasedOnLatestSettings","value","propagateFailure","error_1","enable","setText","torchOffButton","torchOnButton","error","errorMessage","torchOnFailedMessage","torchOffFailedMessage","torchButton","createElement","TORCH_BUTTON_ID","torchController","TorchButton","parentElement","torchButtonOptions","innerText","style","display","marginLeft","$this","addEventListener","_","flipState","isTorchEnabled","classList","remove","TORCH_BUTTON_CLASS_TORCH_OFF","add","TORCH_BUTTON_CLASS_TORCH_ON","appendChild","disabled","text","reset","button","render"],"sourceRoot":"","sources":["../../../../src/ui/scanner/torch-button.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}