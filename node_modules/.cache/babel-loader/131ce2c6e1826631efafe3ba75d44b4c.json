{"ast":null,"code":"var _jsxFileName = \"/Users/nebulae/anglebotics/attendance/webApp/EightSixZeroHz/src/Html5QrcodePlugin.jsx\";\nimport { Html5QrcodeScanner, Html5QrcodeSupportedFormats } from \"html5-qrcode\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst qrcodeRegionId = \"html5qr-code-full-region\";\nclass Html5QrcodePlugin extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: qrcodeRegionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  componentWillUnmount() {\n    // TODO(mebjas): See if there is a better way to handle\n    //\tpromise in `componentWillUnmount`.\n    this.html5QrcodeScanner.clear().catch(error => {\n      console.error(\"Failed to clear html5QrcodeScanner. \", error);\n    });\n  }\n  componentDidMount() {\n    // Creates the configuration object for Html5QrcodeScanner.\n    function createConfig(props) {\n      var config = {};\n      if (props.fps) {\n        config.fps = props.fps;\n      }\n      if (props.qrbox) {\n        config.qrbox = props.qrbox;\n      }\n      if (props.aspectRatio) {\n        config.aspectRatio = props.aspectRatio;\n      }\n      if (props.disableFlip !== undefined) {\n        config.disableFlip = props.disableFlip;\n      }\n      //if (props.zoom) {\n      config.zoom = 2.5;\n      //}\n      config.formatsToSupport = [Html5QrcodeSupportedFormats.QR_CODE];\n      return config;\n    }\n\n    //var config = createConfig(this.props);\n    var config = createConfig(this.props);\n    var verbose = this.props.verbose === true;\n\n    // Suceess callback is required.\n    if (!this.props.qrCodeSuccessCallback) {\n      // eslint-disable-next-line no-throw-literal\n      throw \"qrCodeSuccessCallback is required callback.\";\n    }\n    this.html5QrcodeScanner = new Html5QrcodeScanner(qrcodeRegionId, config, verbose);\n    this.html5QrcodeScanner.render(this.props.qrCodeSuccessCallback, this.props.qrCodeErrorCallback);\n  }\n}\n;\nexport default Html5QrcodePlugin;","map":{"version":3,"names":["Html5QrcodeScanner","Html5QrcodeSupportedFormats","React","qrcodeRegionId","Html5QrcodePlugin","Component","render","componentWillUnmount","html5QrcodeScanner","clear","catch","error","console","componentDidMount","createConfig","props","config","fps","qrbox","aspectRatio","disableFlip","undefined","zoom","formatsToSupport","QR_CODE","verbose","qrCodeSuccessCallback","qrCodeErrorCallback"],"sources":["/Users/nebulae/anglebotics/attendance/webApp/EightSixZeroHz/src/Html5QrcodePlugin.jsx"],"sourcesContent":["import { Html5QrcodeScanner, Html5QrcodeSupportedFormats } from \"html5-qrcode\";\nimport React from 'react';\n\nconst qrcodeRegionId = \"html5qr-code-full-region\";\n\nclass Html5QrcodePlugin extends React.Component {\n\t\trender() {\n\t\t\t\treturn <div id={qrcodeRegionId} />;\n\t\t}\n\n\t\tcomponentWillUnmount() {\n\t\t\t\t// TODO(mebjas): See if there is a better way to handle\n\t\t\t\t//\tpromise in `componentWillUnmount`.\n\t\t\t\tthis.html5QrcodeScanner.clear().catch(error => {\n\t\t\t\t\t\tconsole.error(\"Failed to clear html5QrcodeScanner. \", error);\n\t\t\t\t});\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\t\t// Creates the configuration object for Html5QrcodeScanner.\n\t\t\t\tfunction createConfig(props) {\n\t\t\t\t\t\tvar config = {};\n\t\t\t\t\t\tif (props.fps) {\n\t\t\t\t\t\tconfig.fps = props.fps;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (props.qrbox) {\n\t\t\t\t\t\tconfig.qrbox = props.qrbox;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (props.aspectRatio) {\n\t\t\t\t\t\tconfig.aspectRatio = props.aspectRatio;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (props.disableFlip !== undefined) {\n\t\t\t\t\t\tconfig.disableFlip = props.disableFlip;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//if (props.zoom) {\n\t\t\t\t\t\tconfig.zoom = 2.5;\n\t\t\t\t\t\t//}\n\t\t\t\t\t\tconfig.formatsToSupport = [Html5QrcodeSupportedFormats.QR_CODE];\n\t\t\t\t\t\treturn config\n\t\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t//var config = createConfig(this.props);\n\t\t\t\tvar config = createConfig(this.props);\n\t\t\t\tvar verbose = this.props.verbose === true;\n\n\t\t\t\t// Suceess callback is required.\n\t\t\t\tif (!(this.props.qrCodeSuccessCallback )) {\n\t\t\t\t\t\t// eslint-disable-next-line no-throw-literal\n\t\t\t\t\t\tthrow \"qrCodeSuccessCallback is required callback.\";\n\t\t\t\t}\n\n\t\t\t\tthis.html5QrcodeScanner = new Html5QrcodeScanner(\n\t\t\t\t\t\tqrcodeRegionId, config, verbose);\n\t\t\t\tthis.html5QrcodeScanner.render(\n\t\t\t\t\t\tthis.props.qrCodeSuccessCallback,\n\t\t\t\t\t\tthis.props.qrCodeErrorCallback);\n\t\t}\n};\n\nexport default Html5QrcodePlugin;\n"],"mappings":";AAAA,SAASA,kBAAkB,EAAEC,2BAA2B,QAAQ,cAAc;AAC9E,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,cAAc,GAAG,0BAA0B;AAEjD,MAAMC,iBAAiB,SAASF,KAAK,CAACG,SAAS,CAAC;EAC9CC,MAAM,GAAG;IACP,oBAAO;MAAK,EAAE,EAAEH;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EACpC;EAEAI,oBAAoB,GAAG;IACrB;IACA;IACA,IAAI,CAACC,kBAAkB,CAACC,KAAK,EAAE,CAACC,KAAK,CAACC,KAAK,IAAI;MAC7CC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D,CAAC,CAAC;EACJ;EAEAE,iBAAiB,GAAG;IAClB;IACA,SAASC,YAAY,CAACC,KAAK,EAAE;MAC3B,IAAIC,MAAM,GAAG,CAAC,CAAC;MACf,IAAID,KAAK,CAACE,GAAG,EAAE;QACfD,MAAM,CAACC,GAAG,GAAGF,KAAK,CAACE,GAAG;MACtB;MACA,IAAIF,KAAK,CAACG,KAAK,EAAE;QACjBF,MAAM,CAACE,KAAK,GAAGH,KAAK,CAACG,KAAK;MAC1B;MACA,IAAIH,KAAK,CAACI,WAAW,EAAE;QACvBH,MAAM,CAACG,WAAW,GAAGJ,KAAK,CAACI,WAAW;MACtC;MACA,IAAIJ,KAAK,CAACK,WAAW,KAAKC,SAAS,EAAE;QACrCL,MAAM,CAACI,WAAW,GAAGL,KAAK,CAACK,WAAW;MACtC;MACA;MACAJ,MAAM,CAACM,IAAI,GAAG,GAAG;MACjB;MACAN,MAAM,CAACO,gBAAgB,GAAG,CAACtB,2BAA2B,CAACuB,OAAO,CAAC;MAC/D,OAAOR,MAAM;IAEf;;IAEA;IACA,IAAIA,MAAM,GAAGF,YAAY,CAAC,IAAI,CAACC,KAAK,CAAC;IACrC,IAAIU,OAAO,GAAG,IAAI,CAACV,KAAK,CAACU,OAAO,KAAK,IAAI;;IAEzC;IACA,IAAI,CAAE,IAAI,CAACV,KAAK,CAACW,qBAAuB,EAAE;MACxC;MACA,MAAM,6CAA6C;IACrD;IAEA,IAAI,CAAClB,kBAAkB,GAAG,IAAIR,kBAAkB,CAC9CG,cAAc,EAAEa,MAAM,EAAES,OAAO,CAAC;IAClC,IAAI,CAACjB,kBAAkB,CAACF,MAAM,CAC5B,IAAI,CAACS,KAAK,CAACW,qBAAqB,EAChC,IAAI,CAACX,KAAK,CAACY,mBAAmB,CAAC;EACnC;AACF;AAAC;AAED,eAAevB,iBAAiB"},"metadata":{},"sourceType":"module"}